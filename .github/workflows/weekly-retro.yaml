name: weekly retro

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  get-journal-entries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: create directories
        run: mkdir -p journal-entries

      - name: setup gcloud cli
        run: |
          wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
          tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --quiet --usage-reporting=false --path-update=true
          PATH="google-cloud-sdk/bin:${PATH}"
          gcloud --quiet components update

      - name: Authenticate GCF invoker
        run: |
          printf "%s" '${{ secrets.GCF_INVOKER_SERVICE_ACCOUNT }}' > key-file.json
          gcloud auth activate-service-account --key-file=key-file.json
          rm key-file.json

      - name: Get journal entries
        working-directory: journal-entries
        run: |
          curl -X POST -s -H "Authorization: Bearer $(gcloud auth print-identity-token)" \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -d '{
            "organization": "${{ secrets.ORGANIZATION }}",
            "database-id": "${{ secrets.DATABASE_ID }}",
            "view-id": "${{ secrets.VIEW_ID }}"
          }' \
          -o journal-entries.json \
          ${{ secrets.NOTRE_URL }}

      - name: stringify journal entries
        working-directory: journal-entries
        run: |
          ../scripts/stringify-json.sh journal-entries.json > journal-entries.txt

      - name: process journal entries
        working-directory: journal-entries
        run: |
          curl -X POST -s -H "Authorization: Bearer $(gcloud auth print-identity-token)" \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -d "{
            \"prompt\": \"Here's my journal entries for the week, give me a summary with points for good and bad\",
            \"base64_text_files\": [
                \"$(base64 -i journal-entries.txt)\"
            ]
          }" \
          -o journal-entries-summary.json \
          ${{ secrets.LLM_URL }}

          curl -X POST -s -H "Authorization: Bearer $(gcloud auth print-identity-token)" \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -d "{
            \"prompt\": \"Here's my journal entries for the week, give me some recommendations on how to improve\",
            \"base64_text_files\": [
                \"$(base64 -i journal-entries.txt)\"
            ]
          }" \
          -o journal-entries-recommendation.json \
          ${{ secrets.LLM_URL }}

      - name: Authenticate PUB/SUB publisher
        run: |
          printf "%s" '${{ secrets.PUBSUB_PUBLISHER_SERVICE_ACCOUNT }}' > key-file.json
          gcloud auth activate-service-account --key-file=key-file.json
          rm key-file.json

      - name: send journal entries to pubsub
        working-directory: journal-entries
        run: |
          echo '[{ "key": "Name", "value": "Weekly Retrospective" }]' > properties.json 
          ../python/get_weekly_retro_template.py journal-entries-summary.json journal-entries-recommendation.json > children.json
          PUBSUB_MESSAGE=$(../scripts/create-pubsub-message-for-notion.sh -o ${{ secrets.ORGANIZATION }} -d ${{ secrets.DATABASE_ID }} -v ${{ secrets.VIEW_ID }} -p properties.json -c children.json)
          echo "THE PUBSUB MESSAGE"
          echo $PUBSUB_MESSAGE
          ../scripts/send-to-pubsub.sh -p ${{ secrets.GCP_PROJECT_ID }} -t ${{ secrets.CREATE_NOTION_PAGE_TOPIC }}  -m $PUBSUB_MESSAGE
